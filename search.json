[{"title":"Data analysis process","date":"2023-03-30T08:23:23.000Z","url":"/2023/03/30/Mar202330/","tags":[["Data","/tags/Data/"]],"categories":[["Scilab","/categories/Scilab/"],["D3","/categories/Scilab/D3/"]],"content":"Transfer Data into JSON formatTOPIC: During web app development I need data in JSON format. Scilab is my processing tool but unfortunately it doesn’t have functions for parsing arrays and matrices to JSON format. The idea is to create simple function for save Scilab’s arrays (vectors) as JSON files. THEORY: JSON format:JavaScript Object Notation is a lightweight format of data storage. It is language independent - even if JSON has JavaScript syntax - beacuse it is a text file.JSON is described here: Introducing JSONRow vector in JSON will be look like: Column vector in JSON will be look like: Data visualization: Web browsers are sophisticated tools (or systems) and nowdays it is possible to create data visualizations without static graphic files. Really nice tool for data visualization is D3 JavaScript library. It has many functions for pre-processing of different datasets. D3 is designed for simple charts, plots, network graphs and geospatial projections. D3 can read .csv files so why we should use JSON? For simple structures like matrices and vectors it is not so important but when we have more complicated datasets where many datatypes are mixed together or objects are nested inside objects, it is more comfortable to handle with the JSON. SCILAB CODE: Function for creating row vector is really easy: We are passing two arguments: m - matrix (vector) of values and n - string with the name of object. Then we are creating chars for JSON syntax. In the for loop, element by element, we are building our text string for JSON. Outside the loops we are adding to our vector object declaration (beginning of the JSON file) and closing brackets. Then file is saved (in the same location as our .sci file). Example of JSON created by this function: RESULTS: As the result I will show you little comparison. We may use this signal image exported from the Scilab plotting window: or nice visualisation created with JSON and D3 (loaded in new window, blogger is not compatible with d3):"},{"title":"Gaussian Blur","date":"2023-03-30T06:47:43.000Z","url":"/2023/03/29/Mar202329/","tags":[["Gaussian Blur","/tags/Gaussian-Blur/"]],"categories":[["Imaging analysis","/categories/Imaging-analysis/"]],"content":"Gaussian BlurHere is an example how blurred image may look like: This blurred image is based on the much more detailed one (Credits: NASA): Gaussian Blur filter is used for remove high frequency components from image. This is important before the edge detection operation - details on image may produce false positive edges. Gaussian blur may be used also for resizing image. Gaussian blur algorithm has two stages. In the stage one Gaussian kernel is created. In the stage two image is convolved by created kernel. Two dimensional Gaussian kernel is created due to the equation: The full algorithm is more complicated and it is explained here. I will write only necessary information below algorithm implementation. The core of the algorithm is a kernel: endfunction #1 Creation of kernel The first line of code creates square matrix of zeros of size (ksize x ksize). If user pass as an argument number 3 then matrix will be look like: [0 0 0 &nbsp;0 0 0 &nbsp;0 0 0] In the next step we are creating values for matrix (these values depends on the matrix size). In our example variable&nbsp;w will be equal to (-1). Inside the for loop our matrix is filled with the proper values. After ending of loop it will be: [-1 0 1 &nbsp;-1 0 1 &nbsp;-1 0 1] And this is the first matrix (x in the equation provided at the beginning). We must create also other, transposed one and for this we are using the last line of code (y in the equation provided at the beginning). And our transposed matrix: [-1&nbsp;-1 -1 &nbsp; 0&nbsp;&nbsp; 0&nbsp;&nbsp;0 &nbsp; 1&nbsp;&nbsp; 1&nbsp; 1] The last part of the function: computes kernel from the equation given by Wikipedia and then this kernel is normalized. (Where s is the sigma parameter provided as the function input). #2 Convolution with the image Normalized kernel is returned to the basic function. Operation similar to showed in the previous note is realised. Image is convolved with the kernel and new image (blurred) is returned. endfunction So, the whole algorithm is: endfunction function kernel2D &#x3D; createGaussianKernel(s, k_size) &#x2F;&#x2F; Creation of the base matrix 1 endfunction And the results: INPUT IMAGE BLURRED OUTPUT (s = 1, kernel size = 5) BLURRED OUTPUT 2 (s = 3, kernel size = 27) "},{"title":"Gaussian Pyramids","date":"2023-03-28T00:45:58.000Z","url":"/2023/03/27/Mar202327/","tags":[["Gaussian Pyramids","/tags/Gaussian-Pyramids/"]],"categories":[["Imaging analysis","/categories/Imaging-analysis/"]],"content":"Gaussian Pyramids In one of my GUI projects for desktop application I applied bilateral filter for some more sophisticated operation.This kind of filter is very slow. It is hard to show preview in the near real-time. The solution for this particular problem is to resize image (for preview). Matrix with smaller number of elements will be processed faster. Additionally there is no need for preservation of the image details in the preview window. Quality drop is not important. One of the simplest and the fastest operations is called \"Gaussian Pyramids\". It is based on the \"Image Pyramids\". Scheme how they are look like is presented below (Wikipedia): Resolution of the output image is always two times smaller than from the base one. This operation is fast and has two stages. In the first stage we are blurring the input image and in the second stage we are removing all even-numbered rows and columns from an image. If the base image has size 512x256 then first level of output will have 256 x 128 pixels (rows x columns). Operation of deleting even-numbered columns and rows in Scilab has simple syntax. Just few lines of code with exactly two of them for choosing and removing particular rows and columns: The most complicated part of the algorithm is the Gaussian Blur operation. Which kernel is the best? I have used kernel provided in the OpenVX documentation&nbsp;and I'm convolving it with the base image (2D convolution is the function of Scilab): So, the Gaussian Pyramid function for Scilab looks like: endfunction And the comparison between input and outputs: INPUT IMAGE (512x512) OUTPUT (256 x 256) OUTPUT (128 x 128) OUTPUT (64 x 64) OUTPUT (32 x 32) ----- "},{"title":"2023年度计划","date":"2023-01-01T21:32:11.000Z","url":"/2023/01/01/year_plan_2023/","tags":[["规划","/tags/%E8%A7%84%E5%88%92/"]],"categories":[["关于自己","/categories/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1/"]],"content":"2023年度计划2022最大的收获就是完成了加拿大本土大学Computer Science的硕士课程顺利毕业，不过坑爹的学校要明年6月才给毕业证。原本规划实习兼职副业丰富自己的业余生活，然而timing并不是很好再加上拖延症并没有去做。所以2023年就好好规划一下吧。这篇文章写得比较详细，预计阅读时间会很长，但仔细看完会有收获。 大纲储蓄、副业、换头、换圈、阅读、自律 计划实现移民：雅思9877(4月)、拿到工签（已申请，等待ing）、申请TFSA额度、EE入池工作：拿到大公司职位，打造大厂人脉 （抱住耶鲁博士和京京大腿！）其他要完成的事情：换驾照（4月）、美签（4月份） 小声逼逼靠4月好忙啊╮(╯▽╰)╭ 基本储蓄加拿大的退休年龄是65岁（男女一样）。根据2022的数据，目前加拿大政府官方统计数据，2022年加拿大平均退休收入为每户每年65,300加元（税前）。如果家庭中有一对夫妇，则每人 32,650 加元。假设我属于平均水平，但我29岁来到加拿大30岁开始工作，只能拿到税前2.9w税后2w+，平均一个月2k左右。明显这是不够的。必须从年轻时就必须候拥有自己的储蓄，储蓄的利息至少cover最低日常开销的程度，日常开销假设房贷3K+个人开销1K+家庭开销2K，一个月利息6K，假设储蓄利率4.5%，就是说存款必须达到1,600,000加币。 理想状态下我并不想工作到65岁被动退休，所以需要计算我的目标收入，假设工作15年，每年存款要达到10.7w加币。但是我刚开始工作年薪不一定能有10w加币，所以我需要副业收入才能达到这个数字。每个月我的房租+养车+吃穿的固定成本可以控制在1.4K刀，每年总消费1.68w刀+每年总储蓄10.7w &#x3D; 每年总收入12.38w刀。（但是目前看来我刚开始工作一年收入也就是6～7w刀，未来随着工龄增长会到10w刀 T T）所以副业收入必须跟主业收入一样多或者达到主业收入的80%的才行。（想要财富自由真的好辛苦啊T T） 主要职业程序员是青春饭，需要趁早转型而不是坐以待毙（真心建议所有程序员都提早作退休规划）。这需要重新思考，未来想要从事什么工作？它需要满足哪些条件？它能带给我什么好处？先说未来职业需要满足哪些条件。 经验型，也就是俗称的越老越吃香的职业 工资随着工龄的增长而增加，最好还能有被动收入 自带社会光环，比如医生律师老师公务员这种 时间自由（这个属性属于锦上添花） 职业之便有利于自主创业or投资 以上是对职业的筛选要求，然后对对公司也有一些要求。 大公司，平台效应撬动自身价值，积累优秀人脉 积极参与同行业交流会和创业孵化项目（积极找VC） 其实很好筛选，因为高薪职业就那么几种类型，可以参考加拿大官方职业分类和加拿大高薪职业排行（非官方统计，仅作参考）。同时，别忽略一些潜在高薪职业，比如政府官员、教师、设计师等，可以通过灰色收入和接私活大大补充自己的收入。 隐藏内容 🔒 我的财务自由规划.pdf属于隐私～有兴趣的找我喝咖啡聊天吧～ 副业分析和筛选方法同上，我还有根据自己的性格爱好和城市特点制定了一些有趣的副业，比如 Airbnb 体验官，带旅客游览我所居住的城市温哥华，这种副业可以接触到来自世界各地的旅客也可以帮助我锻炼多国语言。同时，我也打算尝试一些演艺工作，因为温哥华的电影产业非常发达，我有朋友靠偶尔做兼职去影视剧片场跑龙套也有小赚，但这些都是好玩也没打算这个赚钱。不能忽视的也是最重要的副业当属于自媒体啦，这个无须多言冲冲冲就完了！ 隐藏内容 🔒 我的有趣副业计划.pdf属于隐私～有兴趣的找我喝咖啡聊天吧～ 雅思好消息是2023年1月1日开始雅思G类报名费降低了100块也就是1250人民币，并且我查了一下我家附近（温哥华）考位非常充足，随时想考随时报名。 之前我买过某东方的托福冲刺班的课，当时英语老师说了一句话让我印象深刻，她说托福是考验考生是否 well trained，而不是英语能力到底有多好，一句话总结就是备考相当重要。即便我英语底子不差，能跟老外无障碍交流，但是我自测模拟裸考的成绩大约也就在6分。 所以今年重点在应试技巧。剑桥雅思真题应该会刷1套，把每套题吃透。在一亩三分地上找了一些攻略帖，照着帖子里的经验方法刷，剩下的就交给时间了。ps：容错率和EE打分的边界分值，比如8分和8.5分在EE打分系统里一样的话那就重要考到8就好了。计划5月份以前考完。 其他女生根据自己身体周期变化来安排事情会变得更高效，所以我在每一项后面都加上了周期。 健身💪翘臀是今年的主要目标，受北美审美影响吧哈哈哈。其次主打心肺功能强化，每月2周去健身房做无氧，间隔1周做有氧，剩下一周姨妈生理期休息。（卵泡期+排卵期） 社交🍾️深度社恐患者，为了逼自己社交必须把这个当作任务去对待。保证每周 每月 一次社交活动，随便去运动or桌游or教堂什么的，多跟人沟通交换信息有助于舒缓压力。（排卵期） 阅读📚今年的阅读指标任务艰巨，不再是为了休闲阅读而阅读，而是有目的的阅读。计划读完一本量化的书，2本官场的书，一本商战的书，读完书以后分享笔记和感悟，关键是如何转化知识点为自身能够使用的技能。时间安排上大概是2个月读完一本+做完笔记吧。（黄体期） 娱乐🎮娱乐简直太重要了以至于它的重要性完全不亚于学习。它带给我快乐以及源源不断天马行空的灵感。今年打算通关3个游戏吧。上半年打算通关 Ori and the will of the whips、 We happy few，下半年等到了下半年再说。然后玩玩音乐，跟姐姐学学吉他🎸，不求玩得多好开心就行。（生理期） 总结以上就是2023年的大概计划啦，然后推荐我很喜欢的一位B站up主ElenaLin_青青制作的2023年Notion模版因为我用了她这个模版做计划觉得还不错，所以就给小姐姐推广下（不是广告）。日常生活中我遇到好用的东西或者好的内容也会分享在blog里，同时会注明原版出处充分尊重原作和版权©️。 下一期预告，我会展示晒一些自己的计划和执行成果，以及记录遇到的问题和如何解决问题。 请老板包养我吧！求包养 (´▽｀) 后续以上计划试实行了一周，发现自从指定打游戏KPI以后就经常控制不住打游戏，美其名曰完成游戏KPI哈哈哈，不过打了两天之后就不太想打了，算是负负得正了。另外发现一个很严重的问题，自己的执行力很差。希望今年能变强。明天上午要开展一项新的副业 - IB老师，如果做好了收入会很不错，明天加油～"}]